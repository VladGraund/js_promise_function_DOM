{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","container","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAoBH,GAAAA,OAAAA,GAAa,WACvCE,EACE,UAAUF,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,UACpCL,SAAAA,OAAAA,EAAQM,GAFd,UAQb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAYC,SAASC,cAAc,OAEzCF,EAAUG,UAAUC,IAAI,WACxBJ,EAAUK,YAAcN,EACxBE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.b6970d32.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(`${eventName}`, () => {\n      resolve(\n        `It was ${eventName} on the element: ${element.nodeName}`\n        + `, id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const container = document.createElement('div');\n\n  container.classList.add('message');\n  container.textContent = message;\n  document.body.append(container);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}